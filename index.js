require('dotenv').config()
const { Telegraf, Markup } = require("telegraf");
const bot = new Telegraf(process.env.TOKEN)

const QuestionD = [
    "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –∞–ª—Ñ–∞–≤–∏—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.",
    "–°–ø–æ–π—Ç–µ –≤–∞—à—É –ª—é–±–∏–º—É—é –º—É–∑—ã–∫—É.(–∑–∞–ø–∏—Å–∞—Ç—å –≤ –∞—É–¥–∏–æ —Å–æ–æ–±—â.)",
    "–°—Ç–∞–Ω—Ü—É–π—Ç–µ —Ç–∞–Ω–µ—Ü –Ω–∞ –≤–∏–¥–µ–æ.",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
]
const QuestionT = [
    "–ö–∞–∫ –≤—ã –Ω–∞–∑–≤–∞–ª–∏ –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ ?!\n(–ú–∞–ª—å—á–∏–∫,–¥–µ–≤—É—à–∫–∞)",
    "–ò–º—è —Ç–≤–æ–µ–≥–æ –ø–∞—Ä–Ω—è / –¥–µ–≤—É—à–∫–∏?",
    "–°–∞–º–æ–µ –ø–æ—à–ª–æ–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–æ —Ç—ã –∑–Ω–∞–µ—à—å.",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —á–∏—Ç–∞–ª(–∞) —á—É–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è?",
    "–¢—ã —Ñ–æ—Ç–æ—à–æ–ø–∏—à—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?",
    "–ö–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ —Ç—ã –º–æ–≥(–ª–∞) –±—ã –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å?",
    "–°–∫–æ–ª—å–∫–æ —Ç—ã –≤–µ—Å–∏—à—å?",
    "–ó–∞ —á—Ç–æ —Ç–µ–±–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –±—ã–ª–æ —Å—Ç—ã–¥–Ω–æ?",
    "–ö–æ–º—É —Ç—ã –∑–∞–≤–∏–¥—É–µ—à—å?",
    "–£ —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–π–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–µ? –†–∞—Å—Å–µ–∫—Ä–µ—Ç—å –µ–≥–æ!",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –Ω–∞—Ä—É—à–∞–ª(–∞) –∑–∞–∫–æ–Ω?",
    "–ë—ã–ª–∞ –ª—é–±–æ–≤—å —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞?",
    "–ö–∞–∫—É—é —Å–∞–º—É—é –±–æ–ª—å—à—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ —Ç—ã –¥–µ—Ä–∂–∞–ª(–∞) –≤ —Ä—É–∫–∞—Ö?",
    "–ö–µ–º —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å?",
    "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤–ª—é–±–ª—è–ª–∞—Å—å(–ª—Å—è)?",
    "–°–∫–æ–ª—å–∫–æ –ø–∞—Ä–Ω–µ–π/–¥–µ–≤—É—à–µ–∫ –±—ã–ª–æ?",
    "–¢–µ–±—è –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±—Ä–æ—Å–∞–ª–∏?",
    "–ï—Å–ª–∏ —É —Ç–µ–±—è –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø–æ—è–≤–∏—Ç—Å—è —à–∞–Ω—Å –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å, –∫—Ç–æ –±—ã —ç—Ç–æ –±—ã–ª?",
    "–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —É–±–µ–≥–∞–ª —Å–æ —Å–≤–∏–¥–∞–Ω–∏—è –ø–æ –≤—ã–¥—É–º–∞–Ω–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ?",
    "–ù–∞–∑–æ–≤–∏ –æ–¥–Ω—É –≤–µ—â—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–µ–±–µ.",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ö–æ—Ç–µ–ª(–∞) –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ–ª?",
    "–¶–µ–ª–æ–≤–∞–ª–∞—Å—å/—Ü–µ–ª–æ–≤–∞–ª—Å—è —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ —Å–≤–æ–µ–≥–æ –ø–æ–ª–∞?–ê –ø—Ä–æ—Ç–∏–≤–æ–≥–æ –ø–æ–ª–∞ ?",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —É—Ö–∞–∂–∏–≤–∞–ª(–∞) –∑–∞ –¥–≤—É–º—è –ª—é–¥—å–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?",
    "–ö–æ–º—É —Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Å–æ–≤—Ä–∞–ª(–∞) –∏ –æ —á–µ–º?",
    "–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ª–≥–∞–ª(–∞) –≤ —ç—Ç–æ–π –∏–≥—Ä–µ?",
    "–ï—Å–ª–∏ –±—ã –æ–±–ª–∞–¥–∞–ª–∞ –º–∞–≥–∏—á–µ—Å–∫–æ–π —Å–∏–ª–æ–π, —Ç–æ –∫–∞–∫–æ–π?",
    "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–∞–º–æ–º –Ω–µ–ª–æ–≤–∫–æ–º –∏–ª–∏ –ø–æ–∑–æ—Ä–Ω–æ–º –º–æ–º–µ–Ω—Ç–µ –≤ –∂–∏–∑–Ω–∏!",
    "–ï—Å–ª–∏ –±—ã —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª—Å—è —à–∞–Ω—Å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—à–ª–æ–µ, —á—Ç–æ –±—ã —Ç—ã –∏–∑–º–µ–Ω–∏–ª–∞?",
    "–ö–∞–∫–∏–µ –º—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã –Ω—Ä–∞–≤—è—Ç—Å—è? –ö—Ç–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ—Ö–æ–∂ –Ω–∞ –∏–¥–µ–∞–ª?",
    "–ó–∞ —á—Ç–æ –¥–æ —Å–∏—Ö –ø–æ—Ä —Å—Ç—ã–¥–Ω–æ?",
    "–û —á–µ–º –æ–±—ã—á–Ω–æ –≤—Ä–µ—à—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º?",
    "–ö–∞–∫ –±—ã —Ç—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª (–ø–æ—Ç—Ä–∞—Ç–∏–ª–∞) –º–∏–ª–ª–∏–æ–Ω –¥–æ–ª–ª–∞—Ä–æ–≤?",
    "–¢–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å –∂–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å—É—Ç–∫–∏. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
    "–í–æ–∑–≤—Ä–∞—â–∞–ª—Å—è (–≤–æ–∑–≤—Ä–∞—â–∞–ª–∞—Å—å) –∫ –±—ã–≤—à–∏–º?",
    "–¢—ã –∏–∑–º–µ–Ω—è–ª (–∏–∑–º–µ–Ω—è–ª–∞) –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? –ê —Ç–µ–±–µ?",
    "–ö—Ç–æ —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –±–µ—Å–∏—Ç –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ –∫–æ–º–Ω–∞—Ç–µ?",
    "–ö–æ–º—É –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ ¬´–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è¬ª –∑–∞–≤–∏–¥—É–µ—à—å?",
    "–ö–µ–º –∏ –≥–¥–µ –≤–∏–¥–∏—à—å —Å–µ–±—è —á–µ—Ä–µ–∑ 10 –ª–µ—Ç?",
    "–ú–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–∏—Ç—å –∏–∑–º–µ–Ω—É –∏–ª–∏ —Å–∞–º (—Å–∞–º–∞) –∏–∑–º–µ–Ω–∏—Ç—å?",
    "–ß—Ç–æ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –±–æ–∏—à—å—Å—è –ø–æ—Ç–µ—Ä—è—Ç—å?",
    "–ß—Ç–æ –≥–æ—Ç–æ–≤ (–≥–æ—Ç–æ–≤–∞) —Å–¥–µ–ª–∞—Ç—å –∑–∞ 1 –º–∏–ª–ª–∏–æ–Ω –¥–æ–ª–ª–∞—Ä–æ–≤? –ü–µ—Ä–µ—Å–ø–∞—Ç—å, —Å–º–µ–Ω–∏—Ç—å –ø–æ–ª, —É–±–∏—Ç—å?",
    "–ö–∞–∫–æ–π –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± —Å–æ–±–ª–∞–∑–Ω–∏—Ç—å —Ç–µ–±—è?",
    "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è –¥–æ–±—Ä—ã–º (–¥–æ–±—Ä–æ–π) –∏ —á—Ç–æ –∑–ª–æ–π?",
    "–°–ª–µ–¥–∏—à—å –ª–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∑–∞ –±—ã–≤—à–∏–º–∏?",
    "–ö–∞–∫ –±—ã —Ç—ã –¥–µ–ª–∞–ª (–¥–µ–ª–∞–ª–∞) –ø–µ—Ä–≤—ã–π —à–∞–≥ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
    "–û —á–µ–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å–æ–∂–∞–ª–µ–µ—à—å –≤ –∂–∏–∑–Ω–∏?",
    "–ö–∞–∫–∞—è –º—É–∑—ã–∫–∞ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è?",
    "–ö–æ–º—É –ø–∏—à–µ—à—å —á–∞—â–µ –≤—Å–µ–≥–æ?",
    "–í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–º —Ö–æ—á–µ—à—å –±—ã—Ç—å?",
    "–í—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞ –∫–µ–º-–Ω–∏–±—É–¥—å —à–ø–∏–æ–Ω–∏–ª–∏?",
    "–í—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –≥–æ–≤–æ—Ä–∏–ª–∏ —Å —Å–æ–±–æ–π –≤—Å–ª—É—Ö?",
    "–í —á–µ–º –≤–∞—à —Å–∫—Ä—ã—Ç—ã–π —Ç–∞–ª–∞–Ω—Ç?",
    "–ö—Ç–æ —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —á–µ–ª–æ–≤–µ–∫ –∏ –ø–æ—á–µ–º—É?",
    "–í—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø—Ä–æ–ø—É—Å–∫–∞–ª–∏ –∑–∞–Ω—è—Ç–∏—è?",
    "–£ –∫–æ–≥–æ –∏–∑ –≤–∞—à–∏—Ö –∑–Ω–∞–∫–æ–º—ã—Ö —Å–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –≥–ª–∞–∑–∞?",
    "–•–æ—Ç–µ–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–µ—Ç —Å–≤–æ–∏—Ö –≥–ª–∞–∑?",
    "–ù–∞–∑–æ–≤–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ, —á—Ç–æ —Ç—ã –∏—Å–∫–∞–ª(–∞) –≤ Google.",
    "–î–µ–≤—É—à–∫–∞ / –ø–∞—Ä–µ–Ω—å —Ç–≤–æ–µ–π –º–µ—á—Ç—ã?",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ö–æ—Ç–µ–ª(–∞) –∫–æ–≥–æ-—Ç–æ —É–±–∏—Ç—å?"

]


bot.hears(/\/start|start|–ì–æ –ø –∏–ª–∏ –¥|\/start@Pravda_deyatviya_bot/g, (ctx) => {
    const chatId = ctx.chat.id
    const first_name = ctx.message.from.first_name
    const userid = ctx.message.from.id
    const username = ctx.message.from.username
    const user = `[${ctx.message.from.first_name}](tg://user?id=${ctx.message.from.id})`
    ctx.deleteMessage();
    ctx.telegram.sendPhoto(
        chatId, { source: './photos/photoStart.png' }, {
            caption: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ü•≥ ${user} \n–í –±–æ—Ç–µ –Ω–µ—Ç –≥–ª—É–ø—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Å–∫—É—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π üòà\n–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã ‚ô•Ô∏è `,
            reply_markup: {
                inline_keyboard: [
                    [{ text: "üôà –ü—Ä–∞–≤–¥–∞", callback_data: "Truht" }, { text: "ü§Ø –î–µ–π—Å—Ç–≤–∏—è", callback_data: "Dare" }],
                    [{ text: "üñá –°–ª—É—á–∞–π–Ω–æ", callback_data: "Random" }],
                    [{ text: "üòù –î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url: "https://t.me/Pravda_deystviya_bot?startgroup=new" }],
                ]
            },
            parse_mode: 'MarkdownV2'
        }
    )
})
bot.action("Truht", (ctx) => {
    ctx.deleteMessage();
    ctx.telegram.sendPhoto(
        ctx.chat.id, { source: './photos/photoStart.png' }, {
            caption: QuestionT[0],
            reply_markup: {
                inline_keyboard: [
                    [{ text: "ü§Ø –î–µ–π—Å—Ç–≤–∏—è", callback_data: "Dare" }],
                    [{ text: "üîù –ì–ª–∞–≤–Ω–æ–µ", callback_data: "/start" }],
                    [{
                        text: "üîú –°–ª–µ–¥—É—é—â–∏–π ",
                        callback_data: "nextT:1"
                    }]
                ]
            }
        }
    )
});
bot.action(/^ nextT: (\d + ) $ /, async(ctx) => {
    await ctx.answerCbQuery();
    const element = +ctx.match[0].split(':')[1];
    const nextElement = element + 1

    if (nextElement > arr.length) {
        return ctx.telegram.sendMessage(ctx.chat.id, "–£–≤—ã!–ù–æ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å( \n–ù–∞–ø–∏—à–∏—Ç–µ : @Senior_developper")
    }
    return ctx.telegram.sendPhoto(
        ctx.chat.id, { source: './photos/photoStart.png' }, {
            caption: QuestionT[element],
            reply_markup: {
                inline_keyboard: [
                    [{ text: "ü§Ø –î–µ–π—Å—Ç–≤–∏—è", callback_data: "Dare" }],
                    [{ text: "üîù –ì–ª–∞–≤–Ω–æ–µ", callback_data: "/start" }],
                    [{
                        text: "üîú –°–ª–µ–¥—É—é—â–∏–π ",
                        callback_data: `nextT:${nextElement}`
                    }]
                ]
            }
        }
    )
})

bot.action("Dare", (ctx) => {
    ctx.deleteMessage();

    ctx.telegram.sendPhoto(
        ctx.chat.id, { source: './photos/photoStart.png' }, {
            caption: '–°–∫–∞–∂–∏ –õ–ü/–õ–î —á—Ç–æ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª 100.000—Å—É–º.–ü–æ—Ç–æ–º —Å–∫–∞–∂–∏ —ç—Ç–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ —Ç—ã.',
            reply_markup: {
                inline_keyboard: [
                    [{ text: "üôà –ü—Ä–∞–≤–¥–∞", callback_data: "Truht" }],
                    [{ text: "üîù –ì–ª–∞–≤–Ω–æ–µ", callback_data: "/start" }],
                    [{ text: "üîú –°–ª–µ–¥—É—é—â–∏–π", callback_data: "nextD" }]
                ]
            }
        }
    )
});
bot.action("Random", (ctx) => {
    ctx.deleteMessage();

    const num = Math.floor(Math.random() * 2)
    if (num === 0) {
        ctx.telegram.sendPhoto(
            ctx.chat.id, { source: './photos/photoStart.png' }, {
                caption: '–ö–∞–∫ –≤—ã –Ω–∞–∑–≤–∞–ª–∏ –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ ?!\n(–ú–∞–ª—å—á–∏–∫,–¥–µ–≤—É—à–∫–∞)',
                reply_markup: {
                    inline_keyboard: [
                        [{ text: "ü§Ø –î–µ–π—Å—Ç–≤–∏—è", callback_data: "Dare" }],
                        [{ text: "üîù –ì–ª–∞–≤–Ω–æ–µ", callback_data: "/start" }],
                        [{ text: "üîú –°–ª–µ–¥—É—é—â–∏–π ", callback_data: "nextT:1" }]
                    ]
                }
            }
        )

        // ctx.reply('Truht', Markup.inlineKeyboard([Markup.button.callback("Truht")]))
    } else {
        ctx.telegram.sendPhoto(
            ctx.chat.id, { source: './photos/photoStart.png' }, {
                caption: '–°–∫–∞–∂–∏ –õ–ü/–õ–î —á—Ç–æ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª 100.000—Å—É–º.–ü–æ—Ç–æ–º —Å–∫–∞–∂–∏ —ç—Ç–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ —Ç—ã.',
                reply_markup: {
                    inline_keyboard: [
                        [{ text: "üôà –ü—Ä–∞–≤–¥–∞", callback_data: "Truht" }],
                        [{ text: "üîù –ì–ª–∞–≤–Ω–æ–µ", callback_data: "/start" }],
                        [{ text: "üîú –°–ª–µ–¥—É—é—â–∏–π", callback_data: "nextD" }]
                    ]
                }
            }
        )
    }
});



bot.launch()